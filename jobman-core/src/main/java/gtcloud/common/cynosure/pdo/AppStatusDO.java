// Java file generated automatically from `autogen.fzdl'.
// $Timestamp: 2019-04-29 09:36:30
// DO NOT EDIT THIS FILE UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING.
//
package gtcloud.common.cynosure.pdo;

import platon.ByteStream;
import platon.DefreezeException;
import platon.Freezable;
import platon.FreezerJSON;
import platon.FreezeException;
import platon.JsonNode;
import platon.Message;

public class AppStatusDO extends Message implements FreezerJSON
{
    public static final int FIELD_ID_APPNAME = 0;
    public static final int FIELD_ID_SERVICEADDRESS = 1;
    public static final int FIELD_ID_PID = 2;
    public static final int FIELD_ID_STATUSINFO = 3;

    private String appName = null;
    private String serviceAddress = null;
    private int pid = 0;
    private platon.PropSet statusinfo = null;

    public AppStatusDO() {
        addField(FIELD_ID_APPNAME);
        addField(FIELD_ID_SERVICEADDRESS);
        addField(FIELD_ID_PID);
        if (this.statusinfo != null) {
            addField(FIELD_ID_STATUSINFO);
        }
    }

    public AppStatusDO(AppStatusDO other) {
        this.copyFrom(other);
    }

    public String getAppName() {
        return this.appName;
    }

    public void setAppName(String val) {
        this.appName = val;
    }

    public String getServiceAddress() {
        return this.serviceAddress;
    }

    public void setServiceAddress(String val) {
        this.serviceAddress = val;
    }

    public int getPid() {
        return this.pid;
    }

    public void setPid(int val) {
        this.pid = val;
    }

    public platon.PropSet getStatusinfo() {
        if (this.statusinfo == null) {
            this.statusinfo = new platon.PropSet();
            this.addField(FIELD_ID_STATUSINFO);
        }
        return this.statusinfo;
    }


    // 从给定对象拷贝数据到当前对象
    @Override
    public void copyFrom(Freezable other) {
        super.copyFrom(other);
        AppStatusDO from = (AppStatusDO)other;
        this.appName = from.appName;
        this.serviceAddress = from.serviceAddress;
        this.pid = from.pid;
        if (this.statusinfo == null) {
            this.statusinfo = new platon.PropSet();
        }
        this.statusinfo.copyFrom(from.getStatusinfo());
    }

    // 克隆当前对象。
    @Override
    public Freezable makeClone() {
        AppStatusDO o = new AppStatusDO();
        o.copyFrom(this);
        return o;
    }

    public void clear() {
        this.appName = null;
        this.serviceAddress = null;
        this.pid = 0;
        this.statusinfo = null;
        this.clearFields();
    }

    // 将当前对象打包进给定的字节流中。
    @Override
    public void freeze(ByteStream output) throws FreezeException {
        int[] cookie = new int[2];
        beginFreeze(output, cookie);

        if (hasField(FIELD_ID_APPNAME)) {
            writeFieldString(output, FIELD_ID_APPNAME, this.appName);
        }

        if (hasField(FIELD_ID_SERVICEADDRESS)) {
            writeFieldString(output, FIELD_ID_SERVICEADDRESS, this.serviceAddress);
        }

        if (hasField(FIELD_ID_PID)) {
            writeFieldInt(output, FIELD_ID_PID, this.pid);
        }

        if (hasField(FIELD_ID_STATUSINFO)) {
            writeFieldObject(output, FIELD_ID_STATUSINFO, this.statusinfo);
        }

        endFreeze(output, cookie);
    }

    // 从给定字节流中解包, 并将解包得到的数据覆盖到当前对象上。
    @Override
    public void defreeze(ByteStream input) throws DefreezeException {
        clear();

        int messageLen = beginDefreeze(input);
        int lastPos = input.read_pos();
        while (messageLen > 0) {
            int[] tuple = readTag(input);
            int tagType = tuple[0];
            int fieldId = tuple[1];

            boolean consumed = false;
            switch (fieldId) {
            case FIELD_ID_APPNAME:
                if (tagType == TAG_TYPE_LEN_PREFIXED) {
                    this.appName = readFieldString(input);
                    addField(FIELD_ID_APPNAME);
                    consumed = true;
                }
                break;

            case FIELD_ID_SERVICEADDRESS:
                if (tagType == TAG_TYPE_LEN_PREFIXED) {
                    this.serviceAddress = readFieldString(input);
                    addField(FIELD_ID_SERVICEADDRESS);
                    consumed = true;
                }
                break;

            case FIELD_ID_PID:
                if (tagType == TAG_TYPE_VARINT32) {
                    this.pid = readFieldInt(input);
                    addField(FIELD_ID_PID);
                    consumed = true;
                }
                break;

            case FIELD_ID_STATUSINFO:
                if (tagType == TAG_TYPE_EMBEDDEDMSG) {
                    if (this.statusinfo == null) {
                        this.statusinfo = new platon.PropSet();
                    }
                    readFieldObject(input, this.statusinfo);
                    addField(FIELD_ID_STATUSINFO);
                    consumed = true;
                }
                break;
            }

            if (!consumed) {
                // unknown field, ignore it
                discardBytes(input, tagType);
            }

            final int currentPos = input.read_pos();
            messageLen -= (currentPos - lastPos);
            lastPos = currentPos;
        }

        endDefreeze(input);
    }

    // 将当前消息打包成JSON树, 返回JSON树的指针
    @Override
    public JsonNode freezeToJSON() throws FreezeException {
        JsonNode thisNode = JsonNode.createJsonObject();

        if (hasField(FIELD_ID_APPNAME) && this.appName != null) {
            JsonNode val_c_appName = new JsonNode(this.appName);
            thisNode.put("appName", val_c_appName);
        }

        if (hasField(FIELD_ID_SERVICEADDRESS) && this.serviceAddress != null) {
            JsonNode val_c_serviceAddress = new JsonNode(this.serviceAddress);
            thisNode.put("serviceAddress", val_c_serviceAddress);
        }

        if (hasField(FIELD_ID_PID)) {
            JsonNode val_c_pid = new JsonNode(this.pid);
            thisNode.put("pid", val_c_pid);
        }

        if (hasField(FIELD_ID_STATUSINFO) && this.statusinfo != null) {
            JsonNode val_c_statusinfo = this.statusinfo.freezeToJSON();
            thisNode.put("statusinfo", val_c_statusinfo);
        }
        return thisNode;
    }

    // 从给定JSON树中解包, 并将解包得到的数据覆盖到当前消息上。
    @Override
    public void defreezeFromJSON(JsonNode inputJsonNode) throws DefreezeException {
        if (!inputJsonNode.isObject()) {
            throw new DefreezeException("input json is not object");
        }
        clear();

        JsonNode val_c_appName = inputJsonNode.get("appName");
        if (val_c_appName != null && !val_c_appName.isNull()) {
            this.appName = val_c_appName.asString();
            addField(FIELD_ID_APPNAME);
        }

        JsonNode val_c_serviceAddress = inputJsonNode.get("serviceAddress");
        if (val_c_serviceAddress != null && !val_c_serviceAddress.isNull()) {
            this.serviceAddress = val_c_serviceAddress.asString();
            addField(FIELD_ID_SERVICEADDRESS);
        }

        JsonNode val_c_pid = inputJsonNode.get("pid");
        if (val_c_pid != null && !val_c_pid.isNull()) {
            this.pid = (int)val_c_pid.asInt64();
            addField(FIELD_ID_PID);
        }

        JsonNode val_c_statusinfo = inputJsonNode.get("statusinfo");
        if (val_c_statusinfo != null && !val_c_statusinfo.isNull()) {
            this.getStatusinfo().defreezeFromJSON(val_c_statusinfo);
            addField(FIELD_ID_STATUSINFO);
        }
    }
}

