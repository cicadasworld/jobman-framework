// Java file generated automatically from `schedpdo.fzdl'.
// $Timestamp: 2018-04-18 15:58:28
// DO NOT EDIT THIS FILE UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING.
//
package gtcloud.jobman.core.pdo;

import platon.ByteStream;
import platon.DefreezeException;
import platon.Freezable;
import platon.FreezerJSON;
import platon.FreezeException;
import platon.JsonNode;
import platon.Message;

public class LogonReqDO extends Message implements FreezerJSON
{
    public static final int FIELD_ID_SEQNO = 0;
    public static final int FIELD_ID_NODEID = 1;
    public static final int FIELD_ID_NODEEPOCH = 2;
    public static final int FIELD_ID_JOBCATEGORYLIST = 3;
    public static final int FIELD_ID_OPTIONS = 4;

    private String seqNo = null;
    private String nodeId = null;
    private long nodeEpoch = 0;
    private JobCategoryListDO jobCategoryList = null;
    private platon.PropSet options = null;

    public LogonReqDO() {
        addField(FIELD_ID_SEQNO);
        addField(FIELD_ID_NODEID);
        addField(FIELD_ID_NODEEPOCH);
        if (this.jobCategoryList != null) {
            addField(FIELD_ID_JOBCATEGORYLIST);
        }
        if (this.options != null) {
            addField(FIELD_ID_OPTIONS);
        }
    }

    public LogonReqDO(LogonReqDO other) {
        this.copyFrom(other);
    }

    public String getSeqNo() {
        return this.seqNo;
    }

    public void setSeqNo(String val) {
        this.seqNo = val;
    }

    public String getNodeId() {
        return this.nodeId;
    }

    public void setNodeId(String val) {
        this.nodeId = val;
    }

    public long getNodeEpoch() {
        return this.nodeEpoch;
    }

    public void setNodeEpoch(long val) {
        this.nodeEpoch = val;
    }

    public JobCategoryListDO getJobCategoryList() {
        if (this.jobCategoryList == null) {
            this.jobCategoryList = new JobCategoryListDO();
            this.addField(FIELD_ID_JOBCATEGORYLIST);
        }
        return this.jobCategoryList;
    }

    public platon.PropSet getOptions() {
        if (this.options == null) {
            this.options = new platon.PropSet();
            this.addField(FIELD_ID_OPTIONS);
        }
        return this.options;
    }


    // 从给定对象拷贝数据到当前对象
    @Override
    public void copyFrom(Freezable other) {
        super.copyFrom(other);
        LogonReqDO from = (LogonReqDO)other;
        this.seqNo = from.seqNo;
        this.nodeId = from.nodeId;
        this.nodeEpoch = from.nodeEpoch;
        if (this.jobCategoryList == null) {
            this.jobCategoryList = new JobCategoryListDO();
        }
        this.jobCategoryList.copyFrom(from.getJobCategoryList());
        if (this.options == null) {
            this.options = new platon.PropSet();
        }
        this.options.copyFrom(from.getOptions());
    }

    // 克隆当前对象。
    @Override
    public Freezable makeClone() {
        LogonReqDO o = new LogonReqDO();
        o.copyFrom(this);
        return o;
    }

    public void clear() {
        this.seqNo = null;
        this.nodeId = null;
        this.nodeEpoch = 0;
        this.jobCategoryList = null;
        this.options = null;
        this.clearFields();
    }

    // 将当前对象打包进给定的字节流中。
    @Override
    public void freeze(ByteStream output) throws FreezeException {
        int[] cookie = new int[2];
        beginFreeze(output, cookie);

        if (hasField(FIELD_ID_SEQNO)) {
            writeFieldString(output, FIELD_ID_SEQNO, this.seqNo);
        }

        if (hasField(FIELD_ID_NODEID)) {
            writeFieldString(output, FIELD_ID_NODEID, this.nodeId);
        }

        if (hasField(FIELD_ID_NODEEPOCH)) {
            writeFieldLong(output, FIELD_ID_NODEEPOCH, this.nodeEpoch);
        }

        if (hasField(FIELD_ID_JOBCATEGORYLIST)) {
            writeFieldObject(output, FIELD_ID_JOBCATEGORYLIST, this.jobCategoryList);
        }

        if (hasField(FIELD_ID_OPTIONS)) {
            writeFieldObject(output, FIELD_ID_OPTIONS, this.options);
        }

        endFreeze(output, cookie);
    }

    // 从给定字节流中解包, 并将解包得到的数据覆盖到当前对象上。
    @Override
    public void defreeze(ByteStream input) throws DefreezeException {
        clear();

        int messageLen = beginDefreeze(input);
        int lastPos = input.read_pos();
        while (messageLen > 0) {
            int[] tuple = readTag(input);
            int tagType = tuple[0];
            int fieldId = tuple[1];

            boolean consumed = false;
            switch (fieldId) {
            case FIELD_ID_SEQNO:
                if (tagType == TAG_TYPE_LEN_PREFIXED) {
                    this.seqNo = readFieldString(input);
                    addField(FIELD_ID_SEQNO);
                    consumed = true;
                }
                break;

            case FIELD_ID_NODEID:
                if (tagType == TAG_TYPE_LEN_PREFIXED) {
                    this.nodeId = readFieldString(input);
                    addField(FIELD_ID_NODEID);
                    consumed = true;
                }
                break;

            case FIELD_ID_NODEEPOCH:
                if (tagType == TAG_TYPE_FIXED64) {
                    this.nodeEpoch = readFieldLong(input);
                    addField(FIELD_ID_NODEEPOCH);
                    consumed = true;
                }
                break;

            case FIELD_ID_JOBCATEGORYLIST:
                if (tagType == TAG_TYPE_EMBEDDEDMSG) {
                    if (this.jobCategoryList == null) {
                        this.jobCategoryList = new JobCategoryListDO();
                    }
                    readFieldObject(input, this.jobCategoryList);
                    addField(FIELD_ID_JOBCATEGORYLIST);
                    consumed = true;
                }
                break;

            case FIELD_ID_OPTIONS:
                if (tagType == TAG_TYPE_EMBEDDEDMSG) {
                    if (this.options == null) {
                        this.options = new platon.PropSet();
                    }
                    readFieldObject(input, this.options);
                    addField(FIELD_ID_OPTIONS);
                    consumed = true;
                }
                break;
            }

            if (!consumed) {
                // unknown field, ignore it
                discardBytes(input, tagType);
            }

            final int currentPos = input.read_pos();
            messageLen -= (currentPos - lastPos);
            lastPos = currentPos;
        }

        endDefreeze(input);
    }

    // 将当前消息打包成JSON树, 返回JSON树的指针
    @Override
    public JsonNode freezeToJSON() throws FreezeException {
        JsonNode thisNode = JsonNode.createJsonObject();

        if (hasField(FIELD_ID_SEQNO) && this.seqNo != null) {
            JsonNode val_c_seqNo = new JsonNode(this.seqNo);
            thisNode.put("seqNo", val_c_seqNo);
        }

        if (hasField(FIELD_ID_NODEID) && this.nodeId != null) {
            JsonNode val_c_nodeId = new JsonNode(this.nodeId);
            thisNode.put("nodeId", val_c_nodeId);
        }

        if (hasField(FIELD_ID_NODEEPOCH)) {
            JsonNode val_c_nodeEpoch = new JsonNode(this.nodeEpoch);
            thisNode.put("nodeEpoch", val_c_nodeEpoch);
        }

        if (hasField(FIELD_ID_JOBCATEGORYLIST) && this.jobCategoryList != null) {
            JsonNode val_c_jobCategoryList = this.jobCategoryList.freezeToJSON();
            thisNode.put("jobCategoryList", val_c_jobCategoryList);
        }

        if (hasField(FIELD_ID_OPTIONS) && this.options != null) {
            JsonNode val_c_options = this.options.freezeToJSON();
            thisNode.put("options", val_c_options);
        }
        return thisNode;
    }

    // 从给定JSON树中解包, 并将解包得到的数据覆盖到当前消息上。
    @Override
    public void defreezeFromJSON(JsonNode inputJsonNode) throws DefreezeException {
        if (!inputJsonNode.isObject()) {
            throw new DefreezeException("input json is not object");
        }
        clear();

        JsonNode val_c_seqNo = inputJsonNode.get("seqNo");
        if (val_c_seqNo != null && !val_c_seqNo.isNull()) {
            this.seqNo = val_c_seqNo.asString();
            addField(FIELD_ID_SEQNO);
        }

        JsonNode val_c_nodeId = inputJsonNode.get("nodeId");
        if (val_c_nodeId != null && !val_c_nodeId.isNull()) {
            this.nodeId = val_c_nodeId.asString();
            addField(FIELD_ID_NODEID);
        }

        JsonNode val_c_nodeEpoch = inputJsonNode.get("nodeEpoch");
        if (val_c_nodeEpoch != null && !val_c_nodeEpoch.isNull()) {
            this.nodeEpoch = val_c_nodeEpoch.asInt64();
            addField(FIELD_ID_NODEEPOCH);
        }

        JsonNode val_c_jobCategoryList = inputJsonNode.get("jobCategoryList");
        if (val_c_jobCategoryList != null && !val_c_jobCategoryList.isNull()) {
            this.getJobCategoryList().defreezeFromJSON(val_c_jobCategoryList);
            addField(FIELD_ID_JOBCATEGORYLIST);
        }

        JsonNode val_c_options = inputJsonNode.get("options");
        if (val_c_options != null && !val_c_options.isNull()) {
            this.getOptions().defreezeFromJSON(val_c_options);
            addField(FIELD_ID_OPTIONS);
        }
    }
}

