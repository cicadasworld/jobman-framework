// Java file generated automatically from `mission.fzdl'.
// $Timestamp: 2019-07-19 09:40:49
// DO NOT EDIT THIS FILE UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING.
//
package gtcloud.jobman.core.scheduler.mission.pdo;

import platon.ByteStream;
import platon.DefreezeException;
import platon.Freezable;
import platon.FreezerJSON;
import platon.FreezeException;
import platon.JsonNode;
import platon.Message;

public class AdminMissionItemDO extends Message implements FreezerJSON
{
    public static final int FIELD_ID_ID = 0;
    public static final int FIELD_ID_MISSIONID = 1;
    public static final int FIELD_ID_GEOENTITYID = 2;
    public static final int FIELD_ID_OPTIONS = 3;

    private String id = null;
    private String missionId = null;
    private String geoEntityId = null;
    private platon.PropSet options = null;

    public AdminMissionItemDO() {
        addField(FIELD_ID_ID);
        addField(FIELD_ID_MISSIONID);
        addField(FIELD_ID_GEOENTITYID);
        if (this.options != null) {
            addField(FIELD_ID_OPTIONS);
        }
    }

    public AdminMissionItemDO(AdminMissionItemDO other) {
        this.copyFrom(other);
    }

    public String getId() {
        return this.id;
    }

    public void setId(String val) {
        this.id = val;
    }

    public String getMissionId() {
        return this.missionId;
    }

    public void setMissionId(String val) {
        this.missionId = val;
    }

    public String getGeoEntityId() {
        return this.geoEntityId;
    }

    public void setGeoEntityId(String val) {
        this.geoEntityId = val;
    }

    public platon.PropSet getOptions() {
        if (this.options == null) {
            this.options = new platon.PropSet();
            this.addField(FIELD_ID_OPTIONS);
        }
        return this.options;
    }


    // 从给定对象拷贝数据到当前对象
    @Override
    public void copyFrom(Freezable other) {
        super.copyFrom(other);
        AdminMissionItemDO from = (AdminMissionItemDO)other;
        this.id = from.id;
        this.missionId = from.missionId;
        this.geoEntityId = from.geoEntityId;
        if (this.options == null) {
            this.options = new platon.PropSet();
        }
        this.options.copyFrom(from.getOptions());
    }

    // 克隆当前对象。
    @Override
    public Freezable makeClone() {
        AdminMissionItemDO o = new AdminMissionItemDO();
        o.copyFrom(this);
        return o;
    }

    public void clear() {
        this.id = null;
        this.missionId = null;
        this.geoEntityId = null;
        this.options = null;
        this.clearFields();
    }

    // 将当前对象打包进给定的字节流中。
    @Override
    public void freeze(ByteStream output) throws FreezeException {
        int[] cookie = new int[2];
        beginFreeze(output, cookie);

        if (hasField(FIELD_ID_ID)) {
            writeFieldString(output, FIELD_ID_ID, this.id);
        }

        if (hasField(FIELD_ID_MISSIONID)) {
            writeFieldString(output, FIELD_ID_MISSIONID, this.missionId);
        }

        if (hasField(FIELD_ID_GEOENTITYID)) {
            writeFieldString(output, FIELD_ID_GEOENTITYID, this.geoEntityId);
        }

        if (hasField(FIELD_ID_OPTIONS)) {
            writeFieldObject(output, FIELD_ID_OPTIONS, this.options);
        }

        endFreeze(output, cookie);
    }

    // 从给定字节流中解包, 并将解包得到的数据覆盖到当前对象上。
    @Override
    public void defreeze(ByteStream input) throws DefreezeException {
        clear();

        int messageLen = beginDefreeze(input);
        int lastPos = input.read_pos();
        while (messageLen > 0) {
            int[] tuple = readTag(input);
            int tagType = tuple[0];
            int fieldId = tuple[1];

            boolean consumed = false;
            switch (fieldId) {
            case FIELD_ID_ID:
                if (tagType == TAG_TYPE_LEN_PREFIXED) {
                    this.id = readFieldString(input);
                    addField(FIELD_ID_ID);
                    consumed = true;
                }
                break;

            case FIELD_ID_MISSIONID:
                if (tagType == TAG_TYPE_LEN_PREFIXED) {
                    this.missionId = readFieldString(input);
                    addField(FIELD_ID_MISSIONID);
                    consumed = true;
                }
                break;

            case FIELD_ID_GEOENTITYID:
                if (tagType == TAG_TYPE_LEN_PREFIXED) {
                    this.geoEntityId = readFieldString(input);
                    addField(FIELD_ID_GEOENTITYID);
                    consumed = true;
                }
                break;

            case FIELD_ID_OPTIONS:
                if (tagType == TAG_TYPE_EMBEDDEDMSG) {
                    if (this.options == null) {
                        this.options = new platon.PropSet();
                    }
                    readFieldObject(input, this.options);
                    addField(FIELD_ID_OPTIONS);
                    consumed = true;
                }
                break;
            }

            if (!consumed) {
                // unknown field, ignore it
                discardBytes(input, tagType);
            }

            final int currentPos = input.read_pos();
            messageLen -= (currentPos - lastPos);
            lastPos = currentPos;
        }

        endDefreeze(input);
    }

    // 将当前消息打包成JSON树, 返回JSON树的指针
    @Override
    public JsonNode freezeToJSON() throws FreezeException {
        JsonNode thisNode = JsonNode.createJsonObject();

        if (hasField(FIELD_ID_ID) && this.id != null) {
            JsonNode val_c_id = new JsonNode(this.id);
            thisNode.put("id", val_c_id);
        }

        if (hasField(FIELD_ID_MISSIONID) && this.missionId != null) {
            JsonNode val_c_missionId = new JsonNode(this.missionId);
            thisNode.put("missionId", val_c_missionId);
        }

        if (hasField(FIELD_ID_GEOENTITYID) && this.geoEntityId != null) {
            JsonNode val_c_geoEntityId = new JsonNode(this.geoEntityId);
            thisNode.put("geoEntityId", val_c_geoEntityId);
        }

        if (hasField(FIELD_ID_OPTIONS) && this.options != null) {
            JsonNode val_c_options = this.options.freezeToJSON();
            thisNode.put("options", val_c_options);
        }
        return thisNode;
    }

    // 从给定JSON树中解包, 并将解包得到的数据覆盖到当前消息上。
    @Override
    public void defreezeFromJSON(JsonNode inputJsonNode) throws DefreezeException {
        if (!inputJsonNode.isObject()) {
            throw new DefreezeException("input json is not object");
        }
        clear();

        JsonNode val_c_id = inputJsonNode.get("id");
        if (val_c_id != null && !val_c_id.isNull()) {
            this.id = val_c_id.asString();
            addField(FIELD_ID_ID);
        }

        JsonNode val_c_missionId = inputJsonNode.get("missionId");
        if (val_c_missionId != null && !val_c_missionId.isNull()) {
            this.missionId = val_c_missionId.asString();
            addField(FIELD_ID_MISSIONID);
        }

        JsonNode val_c_geoEntityId = inputJsonNode.get("geoEntityId");
        if (val_c_geoEntityId != null && !val_c_geoEntityId.isNull()) {
            this.geoEntityId = val_c_geoEntityId.asString();
            addField(FIELD_ID_GEOENTITYID);
        }

        JsonNode val_c_options = inputJsonNode.get("options");
        if (val_c_options != null && !val_c_options.isNull()) {
            this.getOptions().defreezeFromJSON(val_c_options);
            addField(FIELD_ID_OPTIONS);
        }
    }
}

